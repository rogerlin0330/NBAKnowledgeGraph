package edu.usc.viterbi.dsci.dsci558project.domain;

import java.util.ArrayList;
import java.util.List;

public class PlayerPerfStatPerGameExample {

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PLAYER_PERFORMANCE_STAT_PER_GAME
     *
     * @mbg.generated Mon Nov 09 15:22:35 PST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PLAYER_PERFORMANCE_STAT_PER_GAME
     *
     * @mbg.generated Mon Nov 09 15:22:35 PST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PLAYER_PERFORMANCE_STAT_PER_GAME
     *
     * @mbg.generated Mon Nov 09 15:22:35 PST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_PERFORMANCE_STAT_PER_GAME
     *
     * @mbg.generated Mon Nov 09 15:22:35 PST 2020
     */
    public PlayerPerfStatPerGameExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_PERFORMANCE_STAT_PER_GAME
     *
     * @mbg.generated Mon Nov 09 15:22:35 PST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_PERFORMANCE_STAT_PER_GAME
     *
     * @mbg.generated Mon Nov 09 15:22:35 PST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_PERFORMANCE_STAT_PER_GAME
     *
     * @mbg.generated Mon Nov 09 15:22:35 PST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_PERFORMANCE_STAT_PER_GAME
     *
     * @mbg.generated Mon Nov 09 15:22:35 PST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_PERFORMANCE_STAT_PER_GAME
     *
     * @mbg.generated Mon Nov 09 15:22:35 PST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_PERFORMANCE_STAT_PER_GAME
     *
     * @mbg.generated Mon Nov 09 15:22:35 PST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_PERFORMANCE_STAT_PER_GAME
     *
     * @mbg.generated Mon Nov 09 15:22:35 PST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_PERFORMANCE_STAT_PER_GAME
     *
     * @mbg.generated Mon Nov 09 15:22:35 PST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_PERFORMANCE_STAT_PER_GAME
     *
     * @mbg.generated Mon Nov 09 15:22:35 PST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_PERFORMANCE_STAT_PER_GAME
     *
     * @mbg.generated Mon Nov 09 15:22:35 PST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PLAYER_PERFORMANCE_STAT_PER_GAME
     *
     * @mbg.generated Mon Nov 09 15:22:35 PST 2020
     */
    protected abstract static class GeneratedCriteria {

        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRecordIdIsNull() {
            addCriterion("record_id is null");
            return (Criteria) this;
        }

        public Criteria andRecordIdIsNotNull() {
            addCriterion("record_id is not null");
            return (Criteria) this;
        }

        public Criteria andRecordIdEqualTo(String value) {
            addCriterion("record_id =", value, "recordId");
            return (Criteria) this;
        }

        public Criteria andRecordIdNotEqualTo(String value) {
            addCriterion("record_id <>", value, "recordId");
            return (Criteria) this;
        }

        public Criteria andRecordIdGreaterThan(String value) {
            addCriterion("record_id >", value, "recordId");
            return (Criteria) this;
        }

        public Criteria andRecordIdGreaterThanOrEqualTo(String value) {
            addCriterion("record_id >=", value, "recordId");
            return (Criteria) this;
        }

        public Criteria andRecordIdLessThan(String value) {
            addCriterion("record_id <", value, "recordId");
            return (Criteria) this;
        }

        public Criteria andRecordIdLessThanOrEqualTo(String value) {
            addCriterion("record_id <=", value, "recordId");
            return (Criteria) this;
        }

        public Criteria andRecordIdLike(String value) {
            addCriterion("record_id like", value, "recordId");
            return (Criteria) this;
        }

        public Criteria andRecordIdNotLike(String value) {
            addCriterion("record_id not like", value, "recordId");
            return (Criteria) this;
        }

        public Criteria andRecordIdIn(List<String> values) {
            addCriterion("record_id in", values, "recordId");
            return (Criteria) this;
        }

        public Criteria andRecordIdNotIn(List<String> values) {
            addCriterion("record_id not in", values, "recordId");
            return (Criteria) this;
        }

        public Criteria andRecordIdBetween(String value1, String value2) {
            addCriterion("record_id between", value1, value2, "recordId");
            return (Criteria) this;
        }

        public Criteria andRecordIdNotBetween(String value1, String value2) {
            addCriterion("record_id not between", value1, value2, "recordId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdIsNull() {
            addCriterion("player_id is null");
            return (Criteria) this;
        }

        public Criteria andPlayerIdIsNotNull() {
            addCriterion("player_id is not null");
            return (Criteria) this;
        }

        public Criteria andPlayerIdEqualTo(String value) {
            addCriterion("player_id =", value, "playerId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdNotEqualTo(String value) {
            addCriterion("player_id <>", value, "playerId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdGreaterThan(String value) {
            addCriterion("player_id >", value, "playerId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdGreaterThanOrEqualTo(String value) {
            addCriterion("player_id >=", value, "playerId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdLessThan(String value) {
            addCriterion("player_id <", value, "playerId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdLessThanOrEqualTo(String value) {
            addCriterion("player_id <=", value, "playerId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdLike(String value) {
            addCriterion("player_id like", value, "playerId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdNotLike(String value) {
            addCriterion("player_id not like", value, "playerId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdIn(List<String> values) {
            addCriterion("player_id in", values, "playerId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdNotIn(List<String> values) {
            addCriterion("player_id not in", values, "playerId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdBetween(String value1, String value2) {
            addCriterion("player_id between", value1, value2, "playerId");
            return (Criteria) this;
        }

        public Criteria andPlayerIdNotBetween(String value1, String value2) {
            addCriterion("player_id not between", value1, value2, "playerId");
            return (Criteria) this;
        }

        public Criteria andSeasonIsNull() {
            addCriterion("season is null");
            return (Criteria) this;
        }

        public Criteria andSeasonIsNotNull() {
            addCriterion("season is not null");
            return (Criteria) this;
        }

        public Criteria andSeasonEqualTo(String value) {
            addCriterion("season =", value, "season");
            return (Criteria) this;
        }

        public Criteria andSeasonNotEqualTo(String value) {
            addCriterion("season <>", value, "season");
            return (Criteria) this;
        }

        public Criteria andSeasonGreaterThan(String value) {
            addCriterion("season >", value, "season");
            return (Criteria) this;
        }

        public Criteria andSeasonGreaterThanOrEqualTo(String value) {
            addCriterion("season >=", value, "season");
            return (Criteria) this;
        }

        public Criteria andSeasonLessThan(String value) {
            addCriterion("season <", value, "season");
            return (Criteria) this;
        }

        public Criteria andSeasonLessThanOrEqualTo(String value) {
            addCriterion("season <=", value, "season");
            return (Criteria) this;
        }

        public Criteria andSeasonLike(String value) {
            addCriterion("season like", value, "season");
            return (Criteria) this;
        }

        public Criteria andSeasonNotLike(String value) {
            addCriterion("season not like", value, "season");
            return (Criteria) this;
        }

        public Criteria andSeasonIn(List<String> values) {
            addCriterion("season in", values, "season");
            return (Criteria) this;
        }

        public Criteria andSeasonNotIn(List<String> values) {
            addCriterion("season not in", values, "season");
            return (Criteria) this;
        }

        public Criteria andSeasonBetween(String value1, String value2) {
            addCriterion("season between", value1, value2, "season");
            return (Criteria) this;
        }

        public Criteria andSeasonNotBetween(String value1, String value2) {
            addCriterion("season not between", value1, value2, "season");
            return (Criteria) this;
        }

        public Criteria andAgeIsNull() {
            addCriterion("age is null");
            return (Criteria) this;
        }

        public Criteria andAgeIsNotNull() {
            addCriterion("age is not null");
            return (Criteria) this;
        }

        public Criteria andAgeEqualTo(Integer value) {
            addCriterion("age =", value, "age");
            return (Criteria) this;
        }

        public Criteria andAgeNotEqualTo(Integer value) {
            addCriterion("age <>", value, "age");
            return (Criteria) this;
        }

        public Criteria andAgeGreaterThan(Integer value) {
            addCriterion("age >", value, "age");
            return (Criteria) this;
        }

        public Criteria andAgeGreaterThanOrEqualTo(Integer value) {
            addCriterion("age >=", value, "age");
            return (Criteria) this;
        }

        public Criteria andAgeLessThan(Integer value) {
            addCriterion("age <", value, "age");
            return (Criteria) this;
        }

        public Criteria andAgeLessThanOrEqualTo(Integer value) {
            addCriterion("age <=", value, "age");
            return (Criteria) this;
        }

        public Criteria andAgeIn(List<Integer> values) {
            addCriterion("age in", values, "age");
            return (Criteria) this;
        }

        public Criteria andAgeNotIn(List<Integer> values) {
            addCriterion("age not in", values, "age");
            return (Criteria) this;
        }

        public Criteria andAgeBetween(Integer value1, Integer value2) {
            addCriterion("age between", value1, value2, "age");
            return (Criteria) this;
        }

        public Criteria andAgeNotBetween(Integer value1, Integer value2) {
            addCriterion("age not between", value1, value2, "age");
            return (Criteria) this;
        }

        public Criteria andTeamAbbrvNameIsNull() {
            addCriterion("team_abbrv_name is null");
            return (Criteria) this;
        }

        public Criteria andTeamAbbrvNameIsNotNull() {
            addCriterion("team_abbrv_name is not null");
            return (Criteria) this;
        }

        public Criteria andTeamAbbrvNameEqualTo(String value) {
            addCriterion("team_abbrv_name =", value, "teamAbbrvName");
            return (Criteria) this;
        }

        public Criteria andTeamAbbrvNameNotEqualTo(String value) {
            addCriterion("team_abbrv_name <>", value, "teamAbbrvName");
            return (Criteria) this;
        }

        public Criteria andTeamAbbrvNameGreaterThan(String value) {
            addCriterion("team_abbrv_name >", value, "teamAbbrvName");
            return (Criteria) this;
        }

        public Criteria andTeamAbbrvNameGreaterThanOrEqualTo(String value) {
            addCriterion("team_abbrv_name >=", value, "teamAbbrvName");
            return (Criteria) this;
        }

        public Criteria andTeamAbbrvNameLessThan(String value) {
            addCriterion("team_abbrv_name <", value, "teamAbbrvName");
            return (Criteria) this;
        }

        public Criteria andTeamAbbrvNameLessThanOrEqualTo(String value) {
            addCriterion("team_abbrv_name <=", value, "teamAbbrvName");
            return (Criteria) this;
        }

        public Criteria andTeamAbbrvNameLike(String value) {
            addCriterion("team_abbrv_name like", value, "teamAbbrvName");
            return (Criteria) this;
        }

        public Criteria andTeamAbbrvNameNotLike(String value) {
            addCriterion("team_abbrv_name not like", value, "teamAbbrvName");
            return (Criteria) this;
        }

        public Criteria andTeamAbbrvNameIn(List<String> values) {
            addCriterion("team_abbrv_name in", values, "teamAbbrvName");
            return (Criteria) this;
        }

        public Criteria andTeamAbbrvNameNotIn(List<String> values) {
            addCriterion("team_abbrv_name not in", values, "teamAbbrvName");
            return (Criteria) this;
        }

        public Criteria andTeamAbbrvNameBetween(String value1, String value2) {
            addCriterion("team_abbrv_name between", value1, value2, "teamAbbrvName");
            return (Criteria) this;
        }

        public Criteria andTeamAbbrvNameNotBetween(String value1, String value2) {
            addCriterion("team_abbrv_name not between", value1, value2, "teamAbbrvName");
            return (Criteria) this;
        }

        public Criteria andLeagueIsNull() {
            addCriterion("league is null");
            return (Criteria) this;
        }

        public Criteria andLeagueIsNotNull() {
            addCriterion("league is not null");
            return (Criteria) this;
        }

        public Criteria andLeagueEqualTo(String value) {
            addCriterion("league =", value, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueNotEqualTo(String value) {
            addCriterion("league <>", value, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueGreaterThan(String value) {
            addCriterion("league >", value, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueGreaterThanOrEqualTo(String value) {
            addCriterion("league >=", value, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueLessThan(String value) {
            addCriterion("league <", value, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueLessThanOrEqualTo(String value) {
            addCriterion("league <=", value, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueLike(String value) {
            addCriterion("league like", value, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueNotLike(String value) {
            addCriterion("league not like", value, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueIn(List<String> values) {
            addCriterion("league in", values, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueNotIn(List<String> values) {
            addCriterion("league not in", values, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueBetween(String value1, String value2) {
            addCriterion("league between", value1, value2, "league");
            return (Criteria) this;
        }

        public Criteria andLeagueNotBetween(String value1, String value2) {
            addCriterion("league not between", value1, value2, "league");
            return (Criteria) this;
        }

        public Criteria andPositionIsNull() {
            addCriterion("position is null");
            return (Criteria) this;
        }

        public Criteria andPositionIsNotNull() {
            addCriterion("position is not null");
            return (Criteria) this;
        }

        public Criteria andPositionEqualTo(String value) {
            addCriterion("position =", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionNotEqualTo(String value) {
            addCriterion("position <>", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionGreaterThan(String value) {
            addCriterion("position >", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionGreaterThanOrEqualTo(String value) {
            addCriterion("position >=", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionLessThan(String value) {
            addCriterion("position <", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionLessThanOrEqualTo(String value) {
            addCriterion("position <=", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionLike(String value) {
            addCriterion("position like", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionNotLike(String value) {
            addCriterion("position not like", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionIn(List<String> values) {
            addCriterion("position in", values, "position");
            return (Criteria) this;
        }

        public Criteria andPositionNotIn(List<String> values) {
            addCriterion("position not in", values, "position");
            return (Criteria) this;
        }

        public Criteria andPositionBetween(String value1, String value2) {
            addCriterion("position between", value1, value2, "position");
            return (Criteria) this;
        }

        public Criteria andPositionNotBetween(String value1, String value2) {
            addCriterion("position not between", value1, value2, "position");
            return (Criteria) this;
        }

        public Criteria andGIsNull() {
            addCriterion("G is null");
            return (Criteria) this;
        }

        public Criteria andGIsNotNull() {
            addCriterion("G is not null");
            return (Criteria) this;
        }

        public Criteria andGEqualTo(Integer value) {
            addCriterion("G =", value, "G");
            return (Criteria) this;
        }

        public Criteria andGNotEqualTo(Integer value) {
            addCriterion("G <>", value, "G");
            return (Criteria) this;
        }

        public Criteria andGGreaterThan(Integer value) {
            addCriterion("G >", value, "G");
            return (Criteria) this;
        }

        public Criteria andGGreaterThanOrEqualTo(Integer value) {
            addCriterion("G >=", value, "G");
            return (Criteria) this;
        }

        public Criteria andGLessThan(Integer value) {
            addCriterion("G <", value, "G");
            return (Criteria) this;
        }

        public Criteria andGLessThanOrEqualTo(Integer value) {
            addCriterion("G <=", value, "G");
            return (Criteria) this;
        }

        public Criteria andGIn(List<Integer> values) {
            addCriterion("G in", values, "G");
            return (Criteria) this;
        }

        public Criteria andGNotIn(List<Integer> values) {
            addCriterion("G not in", values, "G");
            return (Criteria) this;
        }

        public Criteria andGBetween(Integer value1, Integer value2) {
            addCriterion("G between", value1, value2, "G");
            return (Criteria) this;
        }

        public Criteria andGNotBetween(Integer value1, Integer value2) {
            addCriterion("G not between", value1, value2, "G");
            return (Criteria) this;
        }

        public Criteria andGSIsNull() {
            addCriterion("GS is null");
            return (Criteria) this;
        }

        public Criteria andGSIsNotNull() {
            addCriterion("GS is not null");
            return (Criteria) this;
        }

        public Criteria andGSEqualTo(Integer value) {
            addCriterion("GS =", value, "GS");
            return (Criteria) this;
        }

        public Criteria andGSNotEqualTo(Integer value) {
            addCriterion("GS <>", value, "GS");
            return (Criteria) this;
        }

        public Criteria andGSGreaterThan(Integer value) {
            addCriterion("GS >", value, "GS");
            return (Criteria) this;
        }

        public Criteria andGSGreaterThanOrEqualTo(Integer value) {
            addCriterion("GS >=", value, "GS");
            return (Criteria) this;
        }

        public Criteria andGSLessThan(Integer value) {
            addCriterion("GS <", value, "GS");
            return (Criteria) this;
        }

        public Criteria andGSLessThanOrEqualTo(Integer value) {
            addCriterion("GS <=", value, "GS");
            return (Criteria) this;
        }

        public Criteria andGSIn(List<Integer> values) {
            addCriterion("GS in", values, "GS");
            return (Criteria) this;
        }

        public Criteria andGSNotIn(List<Integer> values) {
            addCriterion("GS not in", values, "GS");
            return (Criteria) this;
        }

        public Criteria andGSBetween(Integer value1, Integer value2) {
            addCriterion("GS between", value1, value2, "GS");
            return (Criteria) this;
        }

        public Criteria andGSNotBetween(Integer value1, Integer value2) {
            addCriterion("GS not between", value1, value2, "GS");
            return (Criteria) this;
        }

        public Criteria andMPIsNull() {
            addCriterion("MP is null");
            return (Criteria) this;
        }

        public Criteria andMPIsNotNull() {
            addCriterion("MP is not null");
            return (Criteria) this;
        }

        public Criteria andMPEqualTo(Double value) {
            addCriterion("MP =", value, "MP");
            return (Criteria) this;
        }

        public Criteria andMPNotEqualTo(Double value) {
            addCriterion("MP <>", value, "MP");
            return (Criteria) this;
        }

        public Criteria andMPGreaterThan(Double value) {
            addCriterion("MP >", value, "MP");
            return (Criteria) this;
        }

        public Criteria andMPGreaterThanOrEqualTo(Double value) {
            addCriterion("MP >=", value, "MP");
            return (Criteria) this;
        }

        public Criteria andMPLessThan(Double value) {
            addCriterion("MP <", value, "MP");
            return (Criteria) this;
        }

        public Criteria andMPLessThanOrEqualTo(Double value) {
            addCriterion("MP <=", value, "MP");
            return (Criteria) this;
        }

        public Criteria andMPIn(List<Double> values) {
            addCriterion("MP in", values, "MP");
            return (Criteria) this;
        }

        public Criteria andMPNotIn(List<Double> values) {
            addCriterion("MP not in", values, "MP");
            return (Criteria) this;
        }

        public Criteria andMPBetween(Double value1, Double value2) {
            addCriterion("MP between", value1, value2, "MP");
            return (Criteria) this;
        }

        public Criteria andMPNotBetween(Double value1, Double value2) {
            addCriterion("MP not between", value1, value2, "MP");
            return (Criteria) this;
        }

        public Criteria andFGIsNull() {
            addCriterion("FG is null");
            return (Criteria) this;
        }

        public Criteria andFGIsNotNull() {
            addCriterion("FG is not null");
            return (Criteria) this;
        }

        public Criteria andFGEqualTo(Double value) {
            addCriterion("FG =", value, "FG");
            return (Criteria) this;
        }

        public Criteria andFGNotEqualTo(Double value) {
            addCriterion("FG <>", value, "FG");
            return (Criteria) this;
        }

        public Criteria andFGGreaterThan(Double value) {
            addCriterion("FG >", value, "FG");
            return (Criteria) this;
        }

        public Criteria andFGGreaterThanOrEqualTo(Double value) {
            addCriterion("FG >=", value, "FG");
            return (Criteria) this;
        }

        public Criteria andFGLessThan(Double value) {
            addCriterion("FG <", value, "FG");
            return (Criteria) this;
        }

        public Criteria andFGLessThanOrEqualTo(Double value) {
            addCriterion("FG <=", value, "FG");
            return (Criteria) this;
        }

        public Criteria andFGIn(List<Double> values) {
            addCriterion("FG in", values, "FG");
            return (Criteria) this;
        }

        public Criteria andFGNotIn(List<Double> values) {
            addCriterion("FG not in", values, "FG");
            return (Criteria) this;
        }

        public Criteria andFGBetween(Double value1, Double value2) {
            addCriterion("FG between", value1, value2, "FG");
            return (Criteria) this;
        }

        public Criteria andFGNotBetween(Double value1, Double value2) {
            addCriterion("FG not between", value1, value2, "FG");
            return (Criteria) this;
        }

        public Criteria andFGAIsNull() {
            addCriterion("FGA is null");
            return (Criteria) this;
        }

        public Criteria andFGAIsNotNull() {
            addCriterion("FGA is not null");
            return (Criteria) this;
        }

        public Criteria andFGAEqualTo(Double value) {
            addCriterion("FGA =", value, "FGA");
            return (Criteria) this;
        }

        public Criteria andFGANotEqualTo(Double value) {
            addCriterion("FGA <>", value, "FGA");
            return (Criteria) this;
        }

        public Criteria andFGAGreaterThan(Double value) {
            addCriterion("FGA >", value, "FGA");
            return (Criteria) this;
        }

        public Criteria andFGAGreaterThanOrEqualTo(Double value) {
            addCriterion("FGA >=", value, "FGA");
            return (Criteria) this;
        }

        public Criteria andFGALessThan(Double value) {
            addCriterion("FGA <", value, "FGA");
            return (Criteria) this;
        }

        public Criteria andFGALessThanOrEqualTo(Double value) {
            addCriterion("FGA <=", value, "FGA");
            return (Criteria) this;
        }

        public Criteria andFGAIn(List<Double> values) {
            addCriterion("FGA in", values, "FGA");
            return (Criteria) this;
        }

        public Criteria andFGANotIn(List<Double> values) {
            addCriterion("FGA not in", values, "FGA");
            return (Criteria) this;
        }

        public Criteria andFGABetween(Double value1, Double value2) {
            addCriterion("FGA between", value1, value2, "FGA");
            return (Criteria) this;
        }

        public Criteria andFGANotBetween(Double value1, Double value2) {
            addCriterion("FGA not between", value1, value2, "FGA");
            return (Criteria) this;
        }

        public Criteria andFGPIsNull() {
            addCriterion("FGP is null");
            return (Criteria) this;
        }

        public Criteria andFGPIsNotNull() {
            addCriterion("FGP is not null");
            return (Criteria) this;
        }

        public Criteria andFGPEqualTo(Double value) {
            addCriterion("FGP =", value, "FGP");
            return (Criteria) this;
        }

        public Criteria andFGPNotEqualTo(Double value) {
            addCriterion("FGP <>", value, "FGP");
            return (Criteria) this;
        }

        public Criteria andFGPGreaterThan(Double value) {
            addCriterion("FGP >", value, "FGP");
            return (Criteria) this;
        }

        public Criteria andFGPGreaterThanOrEqualTo(Double value) {
            addCriterion("FGP >=", value, "FGP");
            return (Criteria) this;
        }

        public Criteria andFGPLessThan(Double value) {
            addCriterion("FGP <", value, "FGP");
            return (Criteria) this;
        }

        public Criteria andFGPLessThanOrEqualTo(Double value) {
            addCriterion("FGP <=", value, "FGP");
            return (Criteria) this;
        }

        public Criteria andFGPIn(List<Double> values) {
            addCriterion("FGP in", values, "FGP");
            return (Criteria) this;
        }

        public Criteria andFGPNotIn(List<Double> values) {
            addCriterion("FGP not in", values, "FGP");
            return (Criteria) this;
        }

        public Criteria andFGPBetween(Double value1, Double value2) {
            addCriterion("FGP between", value1, value2, "FGP");
            return (Criteria) this;
        }

        public Criteria andFGPNotBetween(Double value1, Double value2) {
            addCriterion("FGP not between", value1, value2, "FGP");
            return (Criteria) this;
        }

        public Criteria and_3PIsNull() {
            addCriterion("3P is null");
            return (Criteria) this;
        }

        public Criteria and_3PIsNotNull() {
            addCriterion("3P is not null");
            return (Criteria) this;
        }

        public Criteria and_3PEqualTo(Double value) {
            addCriterion("3P =", value, "_3P");
            return (Criteria) this;
        }

        public Criteria and_3PNotEqualTo(Double value) {
            addCriterion("3P <>", value, "_3P");
            return (Criteria) this;
        }

        public Criteria and_3PGreaterThan(Double value) {
            addCriterion("3P >", value, "_3P");
            return (Criteria) this;
        }

        public Criteria and_3PGreaterThanOrEqualTo(Double value) {
            addCriterion("3P >=", value, "_3P");
            return (Criteria) this;
        }

        public Criteria and_3PLessThan(Double value) {
            addCriterion("3P <", value, "_3P");
            return (Criteria) this;
        }

        public Criteria and_3PLessThanOrEqualTo(Double value) {
            addCriterion("3P <=", value, "_3P");
            return (Criteria) this;
        }

        public Criteria and_3PIn(List<Double> values) {
            addCriterion("3P in", values, "_3P");
            return (Criteria) this;
        }

        public Criteria and_3PNotIn(List<Double> values) {
            addCriterion("3P not in", values, "_3P");
            return (Criteria) this;
        }

        public Criteria and_3PBetween(Double value1, Double value2) {
            addCriterion("3P between", value1, value2, "_3P");
            return (Criteria) this;
        }

        public Criteria and_3PNotBetween(Double value1, Double value2) {
            addCriterion("3P not between", value1, value2, "_3P");
            return (Criteria) this;
        }

        public Criteria and_3PAIsNull() {
            addCriterion("3PA is null");
            return (Criteria) this;
        }

        public Criteria and_3PAIsNotNull() {
            addCriterion("3PA is not null");
            return (Criteria) this;
        }

        public Criteria and_3PAEqualTo(Double value) {
            addCriterion("3PA =", value, "_3PA");
            return (Criteria) this;
        }

        public Criteria and_3PANotEqualTo(Double value) {
            addCriterion("3PA <>", value, "_3PA");
            return (Criteria) this;
        }

        public Criteria and_3PAGreaterThan(Double value) {
            addCriterion("3PA >", value, "_3PA");
            return (Criteria) this;
        }

        public Criteria and_3PAGreaterThanOrEqualTo(Double value) {
            addCriterion("3PA >=", value, "_3PA");
            return (Criteria) this;
        }

        public Criteria and_3PALessThan(Double value) {
            addCriterion("3PA <", value, "_3PA");
            return (Criteria) this;
        }

        public Criteria and_3PALessThanOrEqualTo(Double value) {
            addCriterion("3PA <=", value, "_3PA");
            return (Criteria) this;
        }

        public Criteria and_3PAIn(List<Double> values) {
            addCriterion("3PA in", values, "_3PA");
            return (Criteria) this;
        }

        public Criteria and_3PANotIn(List<Double> values) {
            addCriterion("3PA not in", values, "_3PA");
            return (Criteria) this;
        }

        public Criteria and_3PABetween(Double value1, Double value2) {
            addCriterion("3PA between", value1, value2, "_3PA");
            return (Criteria) this;
        }

        public Criteria and_3PANotBetween(Double value1, Double value2) {
            addCriterion("3PA not between", value1, value2, "_3PA");
            return (Criteria) this;
        }

        public Criteria and_3PPIsNull() {
            addCriterion("3PP is null");
            return (Criteria) this;
        }

        public Criteria and_3PPIsNotNull() {
            addCriterion("3PP is not null");
            return (Criteria) this;
        }

        public Criteria and_3PPEqualTo(Double value) {
            addCriterion("3PP =", value, "_3PP");
            return (Criteria) this;
        }

        public Criteria and_3PPNotEqualTo(Double value) {
            addCriterion("3PP <>", value, "_3PP");
            return (Criteria) this;
        }

        public Criteria and_3PPGreaterThan(Double value) {
            addCriterion("3PP >", value, "_3PP");
            return (Criteria) this;
        }

        public Criteria and_3PPGreaterThanOrEqualTo(Double value) {
            addCriterion("3PP >=", value, "_3PP");
            return (Criteria) this;
        }

        public Criteria and_3PPLessThan(Double value) {
            addCriterion("3PP <", value, "_3PP");
            return (Criteria) this;
        }

        public Criteria and_3PPLessThanOrEqualTo(Double value) {
            addCriterion("3PP <=", value, "_3PP");
            return (Criteria) this;
        }

        public Criteria and_3PPIn(List<Double> values) {
            addCriterion("3PP in", values, "_3PP");
            return (Criteria) this;
        }

        public Criteria and_3PPNotIn(List<Double> values) {
            addCriterion("3PP not in", values, "_3PP");
            return (Criteria) this;
        }

        public Criteria and_3PPBetween(Double value1, Double value2) {
            addCriterion("3PP between", value1, value2, "_3PP");
            return (Criteria) this;
        }

        public Criteria and_3PPNotBetween(Double value1, Double value2) {
            addCriterion("3PP not between", value1, value2, "_3PP");
            return (Criteria) this;
        }

        public Criteria and_2PIsNull() {
            addCriterion("2P is null");
            return (Criteria) this;
        }

        public Criteria and_2PIsNotNull() {
            addCriterion("2P is not null");
            return (Criteria) this;
        }

        public Criteria and_2PEqualTo(Double value) {
            addCriterion("2P =", value, "_2P");
            return (Criteria) this;
        }

        public Criteria and_2PNotEqualTo(Double value) {
            addCriterion("2P <>", value, "_2P");
            return (Criteria) this;
        }

        public Criteria and_2PGreaterThan(Double value) {
            addCriterion("2P >", value, "_2P");
            return (Criteria) this;
        }

        public Criteria and_2PGreaterThanOrEqualTo(Double value) {
            addCriterion("2P >=", value, "_2P");
            return (Criteria) this;
        }

        public Criteria and_2PLessThan(Double value) {
            addCriterion("2P <", value, "_2P");
            return (Criteria) this;
        }

        public Criteria and_2PLessThanOrEqualTo(Double value) {
            addCriterion("2P <=", value, "_2P");
            return (Criteria) this;
        }

        public Criteria and_2PIn(List<Double> values) {
            addCriterion("2P in", values, "_2P");
            return (Criteria) this;
        }

        public Criteria and_2PNotIn(List<Double> values) {
            addCriterion("2P not in", values, "_2P");
            return (Criteria) this;
        }

        public Criteria and_2PBetween(Double value1, Double value2) {
            addCriterion("2P between", value1, value2, "_2P");
            return (Criteria) this;
        }

        public Criteria and_2PNotBetween(Double value1, Double value2) {
            addCriterion("2P not between", value1, value2, "_2P");
            return (Criteria) this;
        }

        public Criteria and_2PAIsNull() {
            addCriterion("2PA is null");
            return (Criteria) this;
        }

        public Criteria and_2PAIsNotNull() {
            addCriterion("2PA is not null");
            return (Criteria) this;
        }

        public Criteria and_2PAEqualTo(Double value) {
            addCriterion("2PA =", value, "_2PA");
            return (Criteria) this;
        }

        public Criteria and_2PANotEqualTo(Double value) {
            addCriterion("2PA <>", value, "_2PA");
            return (Criteria) this;
        }

        public Criteria and_2PAGreaterThan(Double value) {
            addCriterion("2PA >", value, "_2PA");
            return (Criteria) this;
        }

        public Criteria and_2PAGreaterThanOrEqualTo(Double value) {
            addCriterion("2PA >=", value, "_2PA");
            return (Criteria) this;
        }

        public Criteria and_2PALessThan(Double value) {
            addCriterion("2PA <", value, "_2PA");
            return (Criteria) this;
        }

        public Criteria and_2PALessThanOrEqualTo(Double value) {
            addCriterion("2PA <=", value, "_2PA");
            return (Criteria) this;
        }

        public Criteria and_2PAIn(List<Double> values) {
            addCriterion("2PA in", values, "_2PA");
            return (Criteria) this;
        }

        public Criteria and_2PANotIn(List<Double> values) {
            addCriterion("2PA not in", values, "_2PA");
            return (Criteria) this;
        }

        public Criteria and_2PABetween(Double value1, Double value2) {
            addCriterion("2PA between", value1, value2, "_2PA");
            return (Criteria) this;
        }

        public Criteria and_2PANotBetween(Double value1, Double value2) {
            addCriterion("2PA not between", value1, value2, "_2PA");
            return (Criteria) this;
        }

        public Criteria and_2PPIsNull() {
            addCriterion("2PP is null");
            return (Criteria) this;
        }

        public Criteria and_2PPIsNotNull() {
            addCriterion("2PP is not null");
            return (Criteria) this;
        }

        public Criteria and_2PPEqualTo(Double value) {
            addCriterion("2PP =", value, "_2PP");
            return (Criteria) this;
        }

        public Criteria and_2PPNotEqualTo(Double value) {
            addCriterion("2PP <>", value, "_2PP");
            return (Criteria) this;
        }

        public Criteria and_2PPGreaterThan(Double value) {
            addCriterion("2PP >", value, "_2PP");
            return (Criteria) this;
        }

        public Criteria and_2PPGreaterThanOrEqualTo(Double value) {
            addCriterion("2PP >=", value, "_2PP");
            return (Criteria) this;
        }

        public Criteria and_2PPLessThan(Double value) {
            addCriterion("2PP <", value, "_2PP");
            return (Criteria) this;
        }

        public Criteria and_2PPLessThanOrEqualTo(Double value) {
            addCriterion("2PP <=", value, "_2PP");
            return (Criteria) this;
        }

        public Criteria and_2PPIn(List<Double> values) {
            addCriterion("2PP in", values, "_2PP");
            return (Criteria) this;
        }

        public Criteria and_2PPNotIn(List<Double> values) {
            addCriterion("2PP not in", values, "_2PP");
            return (Criteria) this;
        }

        public Criteria and_2PPBetween(Double value1, Double value2) {
            addCriterion("2PP between", value1, value2, "_2PP");
            return (Criteria) this;
        }

        public Criteria and_2PPNotBetween(Double value1, Double value2) {
            addCriterion("2PP not between", value1, value2, "_2PP");
            return (Criteria) this;
        }

        public Criteria andEFGPIsNull() {
            addCriterion("eFGP is null");
            return (Criteria) this;
        }

        public Criteria andEFGPIsNotNull() {
            addCriterion("eFGP is not null");
            return (Criteria) this;
        }

        public Criteria andEFGPEqualTo(Double value) {
            addCriterion("eFGP =", value, "eFGP");
            return (Criteria) this;
        }

        public Criteria andEFGPNotEqualTo(Double value) {
            addCriterion("eFGP <>", value, "eFGP");
            return (Criteria) this;
        }

        public Criteria andEFGPGreaterThan(Double value) {
            addCriterion("eFGP >", value, "eFGP");
            return (Criteria) this;
        }

        public Criteria andEFGPGreaterThanOrEqualTo(Double value) {
            addCriterion("eFGP >=", value, "eFGP");
            return (Criteria) this;
        }

        public Criteria andEFGPLessThan(Double value) {
            addCriterion("eFGP <", value, "eFGP");
            return (Criteria) this;
        }

        public Criteria andEFGPLessThanOrEqualTo(Double value) {
            addCriterion("eFGP <=", value, "eFGP");
            return (Criteria) this;
        }

        public Criteria andEFGPIn(List<Double> values) {
            addCriterion("eFGP in", values, "eFGP");
            return (Criteria) this;
        }

        public Criteria andEFGPNotIn(List<Double> values) {
            addCriterion("eFGP not in", values, "eFGP");
            return (Criteria) this;
        }

        public Criteria andEFGPBetween(Double value1, Double value2) {
            addCriterion("eFGP between", value1, value2, "eFGP");
            return (Criteria) this;
        }

        public Criteria andEFGPNotBetween(Double value1, Double value2) {
            addCriterion("eFGP not between", value1, value2, "eFGP");
            return (Criteria) this;
        }

        public Criteria andFTIsNull() {
            addCriterion("FT is null");
            return (Criteria) this;
        }

        public Criteria andFTIsNotNull() {
            addCriterion("FT is not null");
            return (Criteria) this;
        }

        public Criteria andFTEqualTo(Double value) {
            addCriterion("FT =", value, "FT");
            return (Criteria) this;
        }

        public Criteria andFTNotEqualTo(Double value) {
            addCriterion("FT <>", value, "FT");
            return (Criteria) this;
        }

        public Criteria andFTGreaterThan(Double value) {
            addCriterion("FT >", value, "FT");
            return (Criteria) this;
        }

        public Criteria andFTGreaterThanOrEqualTo(Double value) {
            addCriterion("FT >=", value, "FT");
            return (Criteria) this;
        }

        public Criteria andFTLessThan(Double value) {
            addCriterion("FT <", value, "FT");
            return (Criteria) this;
        }

        public Criteria andFTLessThanOrEqualTo(Double value) {
            addCriterion("FT <=", value, "FT");
            return (Criteria) this;
        }

        public Criteria andFTIn(List<Double> values) {
            addCriterion("FT in", values, "FT");
            return (Criteria) this;
        }

        public Criteria andFTNotIn(List<Double> values) {
            addCriterion("FT not in", values, "FT");
            return (Criteria) this;
        }

        public Criteria andFTBetween(Double value1, Double value2) {
            addCriterion("FT between", value1, value2, "FT");
            return (Criteria) this;
        }

        public Criteria andFTNotBetween(Double value1, Double value2) {
            addCriterion("FT not between", value1, value2, "FT");
            return (Criteria) this;
        }

        public Criteria andFTAIsNull() {
            addCriterion("FTA is null");
            return (Criteria) this;
        }

        public Criteria andFTAIsNotNull() {
            addCriterion("FTA is not null");
            return (Criteria) this;
        }

        public Criteria andFTAEqualTo(Double value) {
            addCriterion("FTA =", value, "FTA");
            return (Criteria) this;
        }

        public Criteria andFTANotEqualTo(Double value) {
            addCriterion("FTA <>", value, "FTA");
            return (Criteria) this;
        }

        public Criteria andFTAGreaterThan(Double value) {
            addCriterion("FTA >", value, "FTA");
            return (Criteria) this;
        }

        public Criteria andFTAGreaterThanOrEqualTo(Double value) {
            addCriterion("FTA >=", value, "FTA");
            return (Criteria) this;
        }

        public Criteria andFTALessThan(Double value) {
            addCriterion("FTA <", value, "FTA");
            return (Criteria) this;
        }

        public Criteria andFTALessThanOrEqualTo(Double value) {
            addCriterion("FTA <=", value, "FTA");
            return (Criteria) this;
        }

        public Criteria andFTAIn(List<Double> values) {
            addCriterion("FTA in", values, "FTA");
            return (Criteria) this;
        }

        public Criteria andFTANotIn(List<Double> values) {
            addCriterion("FTA not in", values, "FTA");
            return (Criteria) this;
        }

        public Criteria andFTABetween(Double value1, Double value2) {
            addCriterion("FTA between", value1, value2, "FTA");
            return (Criteria) this;
        }

        public Criteria andFTANotBetween(Double value1, Double value2) {
            addCriterion("FTA not between", value1, value2, "FTA");
            return (Criteria) this;
        }

        public Criteria andFTPIsNull() {
            addCriterion("FTP is null");
            return (Criteria) this;
        }

        public Criteria andFTPIsNotNull() {
            addCriterion("FTP is not null");
            return (Criteria) this;
        }

        public Criteria andFTPEqualTo(Double value) {
            addCriterion("FTP =", value, "FTP");
            return (Criteria) this;
        }

        public Criteria andFTPNotEqualTo(Double value) {
            addCriterion("FTP <>", value, "FTP");
            return (Criteria) this;
        }

        public Criteria andFTPGreaterThan(Double value) {
            addCriterion("FTP >", value, "FTP");
            return (Criteria) this;
        }

        public Criteria andFTPGreaterThanOrEqualTo(Double value) {
            addCriterion("FTP >=", value, "FTP");
            return (Criteria) this;
        }

        public Criteria andFTPLessThan(Double value) {
            addCriterion("FTP <", value, "FTP");
            return (Criteria) this;
        }

        public Criteria andFTPLessThanOrEqualTo(Double value) {
            addCriterion("FTP <=", value, "FTP");
            return (Criteria) this;
        }

        public Criteria andFTPIn(List<Double> values) {
            addCriterion("FTP in", values, "FTP");
            return (Criteria) this;
        }

        public Criteria andFTPNotIn(List<Double> values) {
            addCriterion("FTP not in", values, "FTP");
            return (Criteria) this;
        }

        public Criteria andFTPBetween(Double value1, Double value2) {
            addCriterion("FTP between", value1, value2, "FTP");
            return (Criteria) this;
        }

        public Criteria andFTPNotBetween(Double value1, Double value2) {
            addCriterion("FTP not between", value1, value2, "FTP");
            return (Criteria) this;
        }

        public Criteria andORBIsNull() {
            addCriterion("ORB is null");
            return (Criteria) this;
        }

        public Criteria andORBIsNotNull() {
            addCriterion("ORB is not null");
            return (Criteria) this;
        }

        public Criteria andORBEqualTo(Double value) {
            addCriterion("ORB =", value, "ORB");
            return (Criteria) this;
        }

        public Criteria andORBNotEqualTo(Double value) {
            addCriterion("ORB <>", value, "ORB");
            return (Criteria) this;
        }

        public Criteria andORBGreaterThan(Double value) {
            addCriterion("ORB >", value, "ORB");
            return (Criteria) this;
        }

        public Criteria andORBGreaterThanOrEqualTo(Double value) {
            addCriterion("ORB >=", value, "ORB");
            return (Criteria) this;
        }

        public Criteria andORBLessThan(Double value) {
            addCriterion("ORB <", value, "ORB");
            return (Criteria) this;
        }

        public Criteria andORBLessThanOrEqualTo(Double value) {
            addCriterion("ORB <=", value, "ORB");
            return (Criteria) this;
        }

        public Criteria andORBIn(List<Double> values) {
            addCriterion("ORB in", values, "ORB");
            return (Criteria) this;
        }

        public Criteria andORBNotIn(List<Double> values) {
            addCriterion("ORB not in", values, "ORB");
            return (Criteria) this;
        }

        public Criteria andORBBetween(Double value1, Double value2) {
            addCriterion("ORB between", value1, value2, "ORB");
            return (Criteria) this;
        }

        public Criteria andORBNotBetween(Double value1, Double value2) {
            addCriterion("ORB not between", value1, value2, "ORB");
            return (Criteria) this;
        }

        public Criteria andDRBIsNull() {
            addCriterion("DRB is null");
            return (Criteria) this;
        }

        public Criteria andDRBIsNotNull() {
            addCriterion("DRB is not null");
            return (Criteria) this;
        }

        public Criteria andDRBEqualTo(Double value) {
            addCriterion("DRB =", value, "DRB");
            return (Criteria) this;
        }

        public Criteria andDRBNotEqualTo(Double value) {
            addCriterion("DRB <>", value, "DRB");
            return (Criteria) this;
        }

        public Criteria andDRBGreaterThan(Double value) {
            addCriterion("DRB >", value, "DRB");
            return (Criteria) this;
        }

        public Criteria andDRBGreaterThanOrEqualTo(Double value) {
            addCriterion("DRB >=", value, "DRB");
            return (Criteria) this;
        }

        public Criteria andDRBLessThan(Double value) {
            addCriterion("DRB <", value, "DRB");
            return (Criteria) this;
        }

        public Criteria andDRBLessThanOrEqualTo(Double value) {
            addCriterion("DRB <=", value, "DRB");
            return (Criteria) this;
        }

        public Criteria andDRBIn(List<Double> values) {
            addCriterion("DRB in", values, "DRB");
            return (Criteria) this;
        }

        public Criteria andDRBNotIn(List<Double> values) {
            addCriterion("DRB not in", values, "DRB");
            return (Criteria) this;
        }

        public Criteria andDRBBetween(Double value1, Double value2) {
            addCriterion("DRB between", value1, value2, "DRB");
            return (Criteria) this;
        }

        public Criteria andDRBNotBetween(Double value1, Double value2) {
            addCriterion("DRB not between", value1, value2, "DRB");
            return (Criteria) this;
        }

        public Criteria andTRBIsNull() {
            addCriterion("TRB is null");
            return (Criteria) this;
        }

        public Criteria andTRBIsNotNull() {
            addCriterion("TRB is not null");
            return (Criteria) this;
        }

        public Criteria andTRBEqualTo(Double value) {
            addCriterion("TRB =", value, "TRB");
            return (Criteria) this;
        }

        public Criteria andTRBNotEqualTo(Double value) {
            addCriterion("TRB <>", value, "TRB");
            return (Criteria) this;
        }

        public Criteria andTRBGreaterThan(Double value) {
            addCriterion("TRB >", value, "TRB");
            return (Criteria) this;
        }

        public Criteria andTRBGreaterThanOrEqualTo(Double value) {
            addCriterion("TRB >=", value, "TRB");
            return (Criteria) this;
        }

        public Criteria andTRBLessThan(Double value) {
            addCriterion("TRB <", value, "TRB");
            return (Criteria) this;
        }

        public Criteria andTRBLessThanOrEqualTo(Double value) {
            addCriterion("TRB <=", value, "TRB");
            return (Criteria) this;
        }

        public Criteria andTRBIn(List<Double> values) {
            addCriterion("TRB in", values, "TRB");
            return (Criteria) this;
        }

        public Criteria andTRBNotIn(List<Double> values) {
            addCriterion("TRB not in", values, "TRB");
            return (Criteria) this;
        }

        public Criteria andTRBBetween(Double value1, Double value2) {
            addCriterion("TRB between", value1, value2, "TRB");
            return (Criteria) this;
        }

        public Criteria andTRBNotBetween(Double value1, Double value2) {
            addCriterion("TRB not between", value1, value2, "TRB");
            return (Criteria) this;
        }

        public Criteria andASTIsNull() {
            addCriterion("AST is null");
            return (Criteria) this;
        }

        public Criteria andASTIsNotNull() {
            addCriterion("AST is not null");
            return (Criteria) this;
        }

        public Criteria andASTEqualTo(Double value) {
            addCriterion("AST =", value, "AST");
            return (Criteria) this;
        }

        public Criteria andASTNotEqualTo(Double value) {
            addCriterion("AST <>", value, "AST");
            return (Criteria) this;
        }

        public Criteria andASTGreaterThan(Double value) {
            addCriterion("AST >", value, "AST");
            return (Criteria) this;
        }

        public Criteria andASTGreaterThanOrEqualTo(Double value) {
            addCriterion("AST >=", value, "AST");
            return (Criteria) this;
        }

        public Criteria andASTLessThan(Double value) {
            addCriterion("AST <", value, "AST");
            return (Criteria) this;
        }

        public Criteria andASTLessThanOrEqualTo(Double value) {
            addCriterion("AST <=", value, "AST");
            return (Criteria) this;
        }

        public Criteria andASTIn(List<Double> values) {
            addCriterion("AST in", values, "AST");
            return (Criteria) this;
        }

        public Criteria andASTNotIn(List<Double> values) {
            addCriterion("AST not in", values, "AST");
            return (Criteria) this;
        }

        public Criteria andASTBetween(Double value1, Double value2) {
            addCriterion("AST between", value1, value2, "AST");
            return (Criteria) this;
        }

        public Criteria andASTNotBetween(Double value1, Double value2) {
            addCriterion("AST not between", value1, value2, "AST");
            return (Criteria) this;
        }

        public Criteria andSTLIsNull() {
            addCriterion("STL is null");
            return (Criteria) this;
        }

        public Criteria andSTLIsNotNull() {
            addCriterion("STL is not null");
            return (Criteria) this;
        }

        public Criteria andSTLEqualTo(Double value) {
            addCriterion("STL =", value, "STL");
            return (Criteria) this;
        }

        public Criteria andSTLNotEqualTo(Double value) {
            addCriterion("STL <>", value, "STL");
            return (Criteria) this;
        }

        public Criteria andSTLGreaterThan(Double value) {
            addCriterion("STL >", value, "STL");
            return (Criteria) this;
        }

        public Criteria andSTLGreaterThanOrEqualTo(Double value) {
            addCriterion("STL >=", value, "STL");
            return (Criteria) this;
        }

        public Criteria andSTLLessThan(Double value) {
            addCriterion("STL <", value, "STL");
            return (Criteria) this;
        }

        public Criteria andSTLLessThanOrEqualTo(Double value) {
            addCriterion("STL <=", value, "STL");
            return (Criteria) this;
        }

        public Criteria andSTLIn(List<Double> values) {
            addCriterion("STL in", values, "STL");
            return (Criteria) this;
        }

        public Criteria andSTLNotIn(List<Double> values) {
            addCriterion("STL not in", values, "STL");
            return (Criteria) this;
        }

        public Criteria andSTLBetween(Double value1, Double value2) {
            addCriterion("STL between", value1, value2, "STL");
            return (Criteria) this;
        }

        public Criteria andSTLNotBetween(Double value1, Double value2) {
            addCriterion("STL not between", value1, value2, "STL");
            return (Criteria) this;
        }

        public Criteria andBLKIsNull() {
            addCriterion("BLK is null");
            return (Criteria) this;
        }

        public Criteria andBLKIsNotNull() {
            addCriterion("BLK is not null");
            return (Criteria) this;
        }

        public Criteria andBLKEqualTo(Double value) {
            addCriterion("BLK =", value, "BLK");
            return (Criteria) this;
        }

        public Criteria andBLKNotEqualTo(Double value) {
            addCriterion("BLK <>", value, "BLK");
            return (Criteria) this;
        }

        public Criteria andBLKGreaterThan(Double value) {
            addCriterion("BLK >", value, "BLK");
            return (Criteria) this;
        }

        public Criteria andBLKGreaterThanOrEqualTo(Double value) {
            addCriterion("BLK >=", value, "BLK");
            return (Criteria) this;
        }

        public Criteria andBLKLessThan(Double value) {
            addCriterion("BLK <", value, "BLK");
            return (Criteria) this;
        }

        public Criteria andBLKLessThanOrEqualTo(Double value) {
            addCriterion("BLK <=", value, "BLK");
            return (Criteria) this;
        }

        public Criteria andBLKIn(List<Double> values) {
            addCriterion("BLK in", values, "BLK");
            return (Criteria) this;
        }

        public Criteria andBLKNotIn(List<Double> values) {
            addCriterion("BLK not in", values, "BLK");
            return (Criteria) this;
        }

        public Criteria andBLKBetween(Double value1, Double value2) {
            addCriterion("BLK between", value1, value2, "BLK");
            return (Criteria) this;
        }

        public Criteria andBLKNotBetween(Double value1, Double value2) {
            addCriterion("BLK not between", value1, value2, "BLK");
            return (Criteria) this;
        }

        public Criteria andTOVIsNull() {
            addCriterion("TOV is null");
            return (Criteria) this;
        }

        public Criteria andTOVIsNotNull() {
            addCriterion("TOV is not null");
            return (Criteria) this;
        }

        public Criteria andTOVEqualTo(Double value) {
            addCriterion("TOV =", value, "TOV");
            return (Criteria) this;
        }

        public Criteria andTOVNotEqualTo(Double value) {
            addCriterion("TOV <>", value, "TOV");
            return (Criteria) this;
        }

        public Criteria andTOVGreaterThan(Double value) {
            addCriterion("TOV >", value, "TOV");
            return (Criteria) this;
        }

        public Criteria andTOVGreaterThanOrEqualTo(Double value) {
            addCriterion("TOV >=", value, "TOV");
            return (Criteria) this;
        }

        public Criteria andTOVLessThan(Double value) {
            addCriterion("TOV <", value, "TOV");
            return (Criteria) this;
        }

        public Criteria andTOVLessThanOrEqualTo(Double value) {
            addCriterion("TOV <=", value, "TOV");
            return (Criteria) this;
        }

        public Criteria andTOVIn(List<Double> values) {
            addCriterion("TOV in", values, "TOV");
            return (Criteria) this;
        }

        public Criteria andTOVNotIn(List<Double> values) {
            addCriterion("TOV not in", values, "TOV");
            return (Criteria) this;
        }

        public Criteria andTOVBetween(Double value1, Double value2) {
            addCriterion("TOV between", value1, value2, "TOV");
            return (Criteria) this;
        }

        public Criteria andTOVNotBetween(Double value1, Double value2) {
            addCriterion("TOV not between", value1, value2, "TOV");
            return (Criteria) this;
        }

        public Criteria andPFIsNull() {
            addCriterion("PF is null");
            return (Criteria) this;
        }

        public Criteria andPFIsNotNull() {
            addCriterion("PF is not null");
            return (Criteria) this;
        }

        public Criteria andPFEqualTo(Double value) {
            addCriterion("PF =", value, "PF");
            return (Criteria) this;
        }

        public Criteria andPFNotEqualTo(Double value) {
            addCriterion("PF <>", value, "PF");
            return (Criteria) this;
        }

        public Criteria andPFGreaterThan(Double value) {
            addCriterion("PF >", value, "PF");
            return (Criteria) this;
        }

        public Criteria andPFGreaterThanOrEqualTo(Double value) {
            addCriterion("PF >=", value, "PF");
            return (Criteria) this;
        }

        public Criteria andPFLessThan(Double value) {
            addCriterion("PF <", value, "PF");
            return (Criteria) this;
        }

        public Criteria andPFLessThanOrEqualTo(Double value) {
            addCriterion("PF <=", value, "PF");
            return (Criteria) this;
        }

        public Criteria andPFIn(List<Double> values) {
            addCriterion("PF in", values, "PF");
            return (Criteria) this;
        }

        public Criteria andPFNotIn(List<Double> values) {
            addCriterion("PF not in", values, "PF");
            return (Criteria) this;
        }

        public Criteria andPFBetween(Double value1, Double value2) {
            addCriterion("PF between", value1, value2, "PF");
            return (Criteria) this;
        }

        public Criteria andPFNotBetween(Double value1, Double value2) {
            addCriterion("PF not between", value1, value2, "PF");
            return (Criteria) this;
        }

        public Criteria andPTSIsNull() {
            addCriterion("PTS is null");
            return (Criteria) this;
        }

        public Criteria andPTSIsNotNull() {
            addCriterion("PTS is not null");
            return (Criteria) this;
        }

        public Criteria andPTSEqualTo(Double value) {
            addCriterion("PTS =", value, "PTS");
            return (Criteria) this;
        }

        public Criteria andPTSNotEqualTo(Double value) {
            addCriterion("PTS <>", value, "PTS");
            return (Criteria) this;
        }

        public Criteria andPTSGreaterThan(Double value) {
            addCriterion("PTS >", value, "PTS");
            return (Criteria) this;
        }

        public Criteria andPTSGreaterThanOrEqualTo(Double value) {
            addCriterion("PTS >=", value, "PTS");
            return (Criteria) this;
        }

        public Criteria andPTSLessThan(Double value) {
            addCriterion("PTS <", value, "PTS");
            return (Criteria) this;
        }

        public Criteria andPTSLessThanOrEqualTo(Double value) {
            addCriterion("PTS <=", value, "PTS");
            return (Criteria) this;
        }

        public Criteria andPTSIn(List<Double> values) {
            addCriterion("PTS in", values, "PTS");
            return (Criteria) this;
        }

        public Criteria andPTSNotIn(List<Double> values) {
            addCriterion("PTS not in", values, "PTS");
            return (Criteria) this;
        }

        public Criteria andPTSBetween(Double value1, Double value2) {
            addCriterion("PTS between", value1, value2, "PTS");
            return (Criteria) this;
        }

        public Criteria andPTSNotBetween(Double value1, Double value2) {
            addCriterion("PTS not between", value1, value2, "PTS");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PLAYER_PERFORMANCE_STAT_PER_GAME
     *
     * @mbg.generated do_not_delete_during_merge Mon Nov 09 15:22:35 PST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PLAYER_PERFORMANCE_STAT_PER_GAME
     *
     * @mbg.generated Mon Nov 09 15:22:35 PST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

    }

}
