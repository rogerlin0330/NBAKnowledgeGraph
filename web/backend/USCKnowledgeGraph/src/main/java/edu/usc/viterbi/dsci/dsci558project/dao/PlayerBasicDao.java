package edu.usc.viterbi.dsci.dsci558project.dao;

import edu.usc.viterbi.dsci.dsci558project.dao.sqlprovider.PlayerBasicSqlProvider;
import edu.usc.viterbi.dsci.dsci558project.domain.PlayerBasic;
import edu.usc.viterbi.dsci.dsci558project.domain.PlayerBasicCompact;
import edu.usc.viterbi.dsci.dsci558project.domain.PlayerBasicExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface PlayerBasicDao {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_BASIC
     *
     * @mbg.generated Mon Nov 09 10:38:24 PST 2020
     */
    @SelectProvider(type= PlayerBasicSqlProvider.class, method="countByExample")
    long countByExample(PlayerBasicExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_BASIC
     *
     * @mbg.generated Mon Nov 09 10:38:24 PST 2020
     */
    @DeleteProvider(type=PlayerBasicSqlProvider.class, method="deleteByExample")
    int deleteByExample(PlayerBasicExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_BASIC
     *
     * @mbg.generated Mon Nov 09 10:38:24 PST 2020
     */
    @Delete({
        "delete from PLAYER_BASIC",
        "where record_id = #{recordId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String recordId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_BASIC
     *
     * @mbg.generated Mon Nov 09 10:38:24 PST 2020
     */
    @Insert({
        "insert into PLAYER_BASIC (record_id, player_id, ",
        "player_url, player_name, ",
        "player_full_name, date_of_birth, ",
        "place_of_birth, height, ",
        "weight, college, ",
        "high_school, dominant_hand)",
        "values (#{recordId,jdbcType=VARCHAR}, #{playerId,jdbcType=VARCHAR}, ",
        "#{playerUrl,jdbcType=VARCHAR}, #{playerName,jdbcType=VARCHAR}, ",
        "#{playerFullName,jdbcType=VARCHAR}, #{dateOfBirth,jdbcType=VARCHAR}, ",
        "#{placeOfBirth,jdbcType=VARCHAR}, #{height,jdbcType=DOUBLE}, ",
        "#{weight,jdbcType=DOUBLE}, #{college,jdbcType=VARCHAR}, ",
        "#{highSchool,jdbcType=VARCHAR}, #{dominantHand,jdbcType=VARCHAR})"
    })
    int insert(PlayerBasic record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_BASIC
     *
     * @mbg.generated Mon Nov 09 10:38:24 PST 2020
     */
    @InsertProvider(type=PlayerBasicSqlProvider.class, method="insertSelective")
    int insertSelective(PlayerBasic record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_BASIC
     *
     * @mbg.generated Mon Nov 09 10:38:24 PST 2020
     */
    @SelectProvider(type=PlayerBasicSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="record_id", property="recordId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="player_id", property="playerId", jdbcType=JdbcType.VARCHAR),
        @Result(column="player_url", property="playerUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="player_name", property="playerName", jdbcType=JdbcType.VARCHAR),
        @Result(column="player_full_name", property="playerFullName", jdbcType=JdbcType.VARCHAR),
        @Result(column="date_of_birth", property="dateOfBirth", jdbcType=JdbcType.VARCHAR),
        @Result(column="place_of_birth", property="placeOfBirth", jdbcType=JdbcType.VARCHAR),
        @Result(column="height", property="height", jdbcType=JdbcType.DOUBLE),
        @Result(column="weight", property="weight", jdbcType=JdbcType.DOUBLE),
        @Result(column="college", property="college", jdbcType=JdbcType.VARCHAR),
        @Result(column="high_school", property="highSchool", jdbcType=JdbcType.VARCHAR),
        @Result(column="dominant_hand", property="dominantHand", jdbcType=JdbcType.VARCHAR)
    })
    List<PlayerBasic> selectByExample(PlayerBasicExample example);

    @SelectProvider(type=PlayerBasicSqlProvider.class, method="selectCompactByExample")
    @Results({
        @Result(column="record_id", property="recordId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="player_id", property="playerId", jdbcType=JdbcType.VARCHAR),
        @Result(column="player_name", property="playerName", jdbcType=JdbcType.VARCHAR),
        @Result(column="player_full_name", property="playerFullName", jdbcType=JdbcType.VARCHAR),
        @Result(column="date_of_birth", property="dateOfBirth", jdbcType=JdbcType.VARCHAR),
        @Result(column="place_of_birth", property="placeOfBirth", jdbcType=JdbcType.VARCHAR)
    })
    List<PlayerBasicCompact> selectCompactByExample(PlayerBasicExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_BASIC
     *
     * @mbg.generated Mon Nov 09 10:38:24 PST 2020
     */
    @Select({
        "select",
        "record_id, player_id, player_url, player_name, player_full_name, date_of_birth, ",
        "place_of_birth, height, weight, college, high_school, dominant_hand",
        "from PLAYER_BASIC",
        "where record_id = #{recordId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="record_id", property="recordId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="player_id", property="playerId", jdbcType=JdbcType.VARCHAR),
        @Result(column="player_url", property="playerUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="player_name", property="playerName", jdbcType=JdbcType.VARCHAR),
        @Result(column="player_full_name", property="playerFullName", jdbcType=JdbcType.VARCHAR),
        @Result(column="date_of_birth", property="dateOfBirth", jdbcType=JdbcType.VARCHAR),
        @Result(column="place_of_birth", property="placeOfBirth", jdbcType=JdbcType.VARCHAR),
        @Result(column="height", property="height", jdbcType=JdbcType.DOUBLE),
        @Result(column="weight", property="weight", jdbcType=JdbcType.DOUBLE),
        @Result(column="college", property="college", jdbcType=JdbcType.VARCHAR),
        @Result(column="high_school", property="highSchool", jdbcType=JdbcType.VARCHAR),
        @Result(column="dominant_hand", property="dominantHand", jdbcType=JdbcType.VARCHAR)
    })
    PlayerBasic selectByPrimaryKey(String recordId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_BASIC
     *
     * @mbg.generated Mon Nov 09 10:38:24 PST 2020
     */
    @UpdateProvider(type=PlayerBasicSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") PlayerBasic record, @Param("example") PlayerBasicExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_BASIC
     *
     * @mbg.generated Mon Nov 09 10:38:24 PST 2020
     */
    @UpdateProvider(type=PlayerBasicSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") PlayerBasic record, @Param("example") PlayerBasicExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_BASIC
     *
     * @mbg.generated Mon Nov 09 10:38:24 PST 2020
     */
    @UpdateProvider(type=PlayerBasicSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(PlayerBasic record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PLAYER_BASIC
     *
     * @mbg.generated Mon Nov 09 10:38:24 PST 2020
     */
    @Update({
        "update PLAYER_BASIC",
        "set player_id = #{playerId,jdbcType=VARCHAR},",
          "player_url = #{playerUrl,jdbcType=VARCHAR},",
          "player_name = #{playerName,jdbcType=VARCHAR},",
          "player_full_name = #{playerFullName,jdbcType=VARCHAR},",
          "date_of_birth = #{dateOfBirth,jdbcType=VARCHAR},",
          "place_of_birth = #{placeOfBirth,jdbcType=VARCHAR},",
          "height = #{height,jdbcType=DOUBLE},",
          "weight = #{weight,jdbcType=DOUBLE},",
          "college = #{college,jdbcType=VARCHAR},",
          "high_school = #{highSchool,jdbcType=VARCHAR},",
          "dominant_hand = #{dominantHand,jdbcType=VARCHAR}",
        "where record_id = #{recordId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(PlayerBasic record);

}
